openapi: 3.0.0
info:
  title: My E-commerce API
  version: 1.0.0
servers:
  - url: http://localhost:4000
paths:
  /api/auth/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                username:
                  type: string
                password:
                  type: string
              required:
                - email
                - username
                - password
      responses:
        '201':
          description: Created
  /api/auth/login:
    post:
      summary: Login with existing user credentials
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '200':
          description: Successful login
        '400':
          description: Invalid credentials
  /api/auth/refresh:
    post:
      summary: Refresh access token using HTTP-only refresh cookie
      responses:
        '200':
          description: New access token returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: Missing or invalid refresh token
  /api/auth/logout:
    post:
      summary: Logout user and clear refresh cookie
      responses:
        '200':
          description: Logged out successfully
  /api/products:
    get:
      summary: Get a list of all products
      responses:
        '200':
          description: Array of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
    post:
      summary: Create a new product (admin only)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                price:
                  type: number
                imageUrl:
                  type: string
              required:
                - name
                - price
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Bad request (missing fields)
        '500':
          description: Server error
  /api/products/{id}:
    get:
      summary: Get a product by its ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Product details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found
    put:
      summary: Update an existing product (admin only)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                price:
                  type: number
                imageUrl:
                  type: string
      responses:
        '200':
          description: Updated product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Bad request
        '404':
          description: Product not found
        '500':
          description: Server error
    delete:
      summary: Delete a product (admin only)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Product deleted successfully
        '404':
          description: Product not found
        '500':
          description: Server error
  /api/cart:
    get:
      summary: Get the current user's cart
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Cart items
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CartItem'
        '401':
          description: Unauthorized
    post:
      summary: Add or update an item in the cart
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productId:
                  type: string
                quantity:
                  type: integer
              required:
                - productId
                - quantity
      responses:
        '200':
          description: Updated cart items
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CartItem'
        '400':
          description: Bad request (missing fields)
        '500':
          description: Server error
  /api/orders:
    get:
      summary: Get the current user's orders
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Order list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Product:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        description:
          type: string
        price:
          type: number
        imageUrl:
          type: string
        createdAt:
          type: string
          format: date-time
    CartItem:
      type: object
      properties:
        productId:
          type: string
        quantity:
          type: integer
    Order:
      type: object
      properties:
        _id:
          type: string
        userId:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/CartItem'
        total:
          type: number
        shippingOption:
          type: string
        createdAt:
          type: string
          format: date-time